--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.15) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v81=(v31/(2^(v32-(2 -1))))%((5 -3)^(((v33-((1 + 0) -0)) -(v32-((1067 -(68 + 997)) -1))) + (620 -(555 + 64)))) ;return v81-(v81%(932 -(857 + 74))) ;else local v82=568 -((1637 -(226 + 1044)) + 201) ;local v83;while true do if (v82==((4036 -3109) -(214 + 713))) then v83=(1 + 1)^(v32-((1 -0) + 0)) ;return (((v31%(v83 + v83))>=v83) and (878 -(282 + 595))) or (1637 -((1640 -(32 + 85)) + 112 + 2)) ;end end end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34,v35,v36,v37=v1(v16,v19,v19 + 1 + 2 );v19=v19 + 4 ;return (v37 * (16778173 -(892 + 65))) + (v36 * 65536) + (v35 * (610 -354)) + v34 ;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v38=0;local v39;local v40;local v41;local v42;local v43;local v44;local v45;while true do if (v38~=(0 -0)) then else v39=0;v40=nil;v38=1;end if ((739 -(397 + 339))~=v38) then else v45=nil;while true do local v88=0;local v89;while true do if (v88==(438 -(262 + 176))) then v89=1721 -(345 + 1376) ;while true do if (v89~=1) then else if (v39==(688 -(198 + 490))) then local v99=0;while true do if (v99==(2 -1)) then v42={};v43={v40,v41,nil,v42};v99=1 + 1 ;end if (v99==2) then v39=1;break;end if (0~=v99) then else v40={};v41={};v99=1207 -(696 + 510) ;end end end break;end if (v89==(0 -0)) then local v98=0;while true do if (v98~=(0 -0)) then else if (v39==1) then local v178=114 -(4 + 110) ;while true do if (v178~=(1264 -(1091 + 171))) then else v39=586 -(57 + 527) ;break;end if (v178~=(0 + 0)) then else v44=v24();v45={};v178=3 -2 ;end if (v178~=1) then else for v221=3 -2 ,v44 do local v222=374 -(123 + 251) ;local v223;local v224;local v225;while true do if (v222~=0) then else v223=0 -0 ;v224=nil;v222=699 -(208 + 490) ;end if (v222==(1 -0)) then v225=nil;while true do if (v223~=(0 + 0)) then else local v227=0 + 0 ;while true do if (v227==(836 -(660 + 176))) then v224=v22();v225=nil;v227=1;end if (v227~=(1 + 0)) then else v223=203 -(14 + 188) ;break;end end end if (v223==(676 -(534 + 141))) then if (v224==1) then v225=v22()~=(0 + 0) ;elseif (v224==(2 + 0)) then v225=v25();elseif (v224==(3 + 0)) then v225=v26();end v45[v221]=v225;break;end end break;end end end v43[6 -3 ]=v22();v178=2;end end end if (v39~=(2 -0)) then else local v179=0 -0 ;while true do local v202=0 + 0 ;while true do if (v202==(0 + 0)) then if (v179==1) then return v43;end if (v179==(0 + 0)) then local v226=0;while true do if (v226==0) then for v229=397 -(115 + 281) ,v24() do local v230=65 -(30 + 35) ;local v231;local v232;while true do if (v230==(2 -1)) then while true do if (v231==(1257 -(1043 + 214))) then v232=v22();if (v21(v232,1 + 0 ,3 -2 )==(0 -0)) then local v235=0 -0 ;local v236;local v237;local v238;local v239;local v240;while true do if (v235~=(867 -(550 + 317))) then else v236=0 -0 ;v237=nil;v235=1 -0 ;end if ((2 -1)==v235) then v238=nil;v239=nil;v235=287 -(134 + 151) ;end if (v235==2) then v240=nil;while true do if (v236~=(1666 -(970 + 695))) then else local v241=0 -0 ;while true do if (v241~=1) then else v236=2;break;end if (v241~=(1990 -(582 + 1408))) then else v239=nil;v240=nil;v241=1;end end end if ((0 -0)==v236) then local v242=0;local v243;while true do if (v242~=(0 -0)) then else v243=0 -0 ;while true do if (v243~=0) then else v237=1824 -(1195 + 629) ;v238=nil;v243=1 -0 ;end if (v243==1) then v236=1;break;end end break;end end end if (2~=v236) then else while true do if (v237==0) then local v244=0;local v245;while true do if (v244~=0) then else v245=0;while true do if (v245~=1) then else v237=242 -(187 + 54) ;break;end if (v245~=(780 -(162 + 618))) then else local v253=0 + 0 ;local v254;while true do if (v253~=(0 + 0)) then else v254=126 -(116 + 10) ;while true do if (v254==(1 + 0)) then v245=1;break;end if (v254~=0) then else local v263=0 -0 ;while true do if (v263~=0) then else v238=v21(v232,3 -1 ,1 + 2 );v239=v21(v232,4,9 -3 );v263=1 + 0 ;end if ((1 + 0)==v263) then v254=2 -1 ;break;end end end end break;end end end end break;end end end if ((1637 -(1373 + 263))==v237) then local v246=405 -(118 + 287) ;local v247;while true do if ((1000 -(451 + 549))==v246) then v247=0 + 0 ;while true do if (v247~=(0 -0)) then else v240={v23(),v23(),nil,nil};if (v238==(0 + 0)) then local v256=0 + 0 ;local v257;while true do if (0~=v256) then else v257=0 -0 ;while true do if (v257~=(341 -(218 + 123))) then else v240[1584 -(1535 + 46) ]=v23();v240[4 + 0 ]=v23();break;end end break;end end elseif (v238==(1 + 0)) then v240[563 -(306 + 254) ]=v24();elseif (v238==(2 + 0)) then v240[3]=v24() -((1 + 1)^(1 + 15)) ;elseif (v238~=(5 -2)) then else local v267=0 -0 ;local v268;local v269;while true do if ((1468 -(899 + 568))~=v267) then else while true do if (v268==(0 + 0)) then v269=0;while true do if (v269==(0 -0)) then v240[3]=v24() -((755 -(239 + 514))^(6 + 10)) ;v240[1333 -(797 + 532) ]=v23();break;end end break;end end break;end if (0~=v267) then else v268=0;v269=nil;v267=604 -(268 + 335) ;end end end v247=1 + 0 ;end if (v247~=(2 -1)) then else v237=292 -(60 + 230) ;break;end end break;end end end if (v237~=2) then else local v248=572 -(426 + 146) ;local v249;while true do if (v248==(731 -(476 + 255))) then v249=0 + 0 ;while true do if (v249==(1 + 0)) then v237=5 -2 ;break;end if (v249==(1456 -(282 + 1174))) then local v255=0 -0 ;while true do if (v255==(812 -(569 + 242))) then v249=2 -1 ;break;end if (v255~=(0 + 0)) then else if (v21(v239,1,1)==(1025 -(706 + 318))) then v240[1253 -(721 + 530) ]=v45[v240[1273 -(945 + 326) ]];end if (v21(v239,338 -(144 + 192) ,4 -2 )==(1 + 0)) then v240[703 -(271 + 429) ]=v45[v240[3]];end v255=1 + 0 ;end end end end break;end end end if (v237~=(3 + 0)) then else if (v21(v239,1503 -(1408 + 92) ,1583 -(1183 + 397) )~=(1087 -(461 + 625))) then else v240[1292 -(993 + 295) ]=v45[v240[4]];end v40[v229]=v240;break;end end break;end end break;end end end break;end end break;end if (v230~=0) then else v231=0 + 0 ;v232=nil;v230=1 + 0 ;end end end for v233=1,v24() do v41[v233-(1172 -(418 + 753)) ]=v29();end v226=1 + 0 ;end if ((1 + 0)==v226) then v179=1 + 0 ;break;end end end break;end end end end v98=1934 -(565 + 1368) ;end if (v98==1) then v89=1 + 0 ;break;end end end end break;end end end break;end if (v38==(3 -2)) then v41=nil;v42=nil;v38=1663 -(1477 + 184) ;end if (v38~=(531 -(406 + 123))) then else v43=nil;v44=nil;v38=1772 -(1749 + 20) ;end end end v30=nil;v18=7;end if (v18==4) then function v25()local v46=v24();local v47=v24();local v48=857 -((2002 -1438) + 292) ;local v49=(v21(v47,1 -0 ,60 -40 ) * ((306 -(244 + 60))^(25 + (23 -16)))) + v46 ;local v50=v21(v47,(1515 -(697 + 321)) -(41 + 435) ,1032 -(938 + 63) );local v51=((v21(v47,32)==(1 + 0)) and  -(1126 -((2549 -1613) + 189))) or 1 ;if (v50==(0 + (0 -0))) then if (v49==(1613 -((3607 -2042) + 48))) then return v51 * (0 + 0) ;else local v90=0;while true do if (v90==(1138 -(782 + 356))) then v50=268 -(176 + 91) ;v48=0;break;end end end elseif (v50==(5332 -3285)) then return ((v49==(0 -0)) and (v51 * (1/(1092 -(975 + 46 + 71))))) or (v51 * NaN) ;end return v8(v51,v50-(2898 -(157 + 1718)) ) * (v48 + (v49/((3 -1)^((115 -72) + 9)))) ;end v26=nil;function v26(v52)local v53=1227 -(322 + 905) ;local v54;local v55;while true do if (v53==((2302 -(1121 + 569)) -(602 + 9))) then v54=v3(v16,v19,(v19 + v52) -(1190 -(449 + 740)) );v19=v19 + v52 ;v53=874 -((1040 -(22 + 192)) + (729 -(483 + 200))) ;end if ((0 -0)==v53) then v54=nil;if  not v52 then v52=v24();if (v52==(0 -0)) then return "";end end v53=(2411 -(1404 + 59)) -(245 + 702) ;end if (v53==(3 -1)) then v55={};for v91=3 -2 , #v54 do v55[v91]=v2(v1(v3(v54,v91,v91)));end v53=1 + 2 ;end if (v53==(1 + 2)) then return v6(v55);end end end v18=5;end if (v18==2) then function v22()local v56=v1(v16,v19,v19);v19=v19 + 1 ;return v56;end v23=nil;function v23()local v57=0 -0 ;local v58;local v59;while true do if (v57==(1 -0)) then return (v59 * (1021 -(468 + 297))) + v58 ;end if (v57==(562 -(334 + 228))) then v58,v59=v1(v16,v19,v19 + (6 -4) );v19=v19 + 2 ;v57=2 -1 ;end end end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v60)if (v1(v60,2)==79) then v20=v0(v3(v60,1,1));return "";else local v84=v2(v0(v60,16));if v20 then local v93=v5(v84,v20);v20=nil;return v93;else return v84;end end end);v18=1;end if (v18==7) then function v30(v61,v62,v63)local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...)local v67=v64;local v68=v65;local v69=v66;local v70=v28;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v85=0,v75 do if (v85>=v69) then v73[v85-v69 ]=v74[v85 + 1 ];else v77[v85]=v74[v85 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1];if (v80<=22) then if (v80<=10) then if (v80<=4) then if (v80<=1) then if (v80>0) then v77[v79[2]]=v79[3];else local v102=v79[2];v77[v102](v77[v102 + 1 ]);end elseif (v80<=2) then v77[v79[2]]=v77[v79[3]][v79[4]];elseif (v80==3) then do return;end elseif (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=7) then if (v80<=5) then local v105=0;local v106;while true do if (v105==0) then v106=v79[2];v77[v106]=v77[v106]();break;end end elseif (v80==6) then v77[v79[2]]=v77[v79[3]];else local v132=0;local v133;local v134;while true do if (v132==1) then v77[v133 + 1 ]=v134;v77[v133]=v134[v79[4]];break;end if (v132==0) then v133=v79[2];v134=v77[v79[3]];v132=1;end end end elseif (v80<=8) then v71=v79[3];elseif (v80==9) then local v135=0;local v136;while true do if (v135==0) then v136=v79[2];v77[v136]=v77[v136](v13(v77,v136 + 1 ,v72));break;end end else for v182=v79[2],v79[3] do v77[v182]=nil;end end elseif (v80<=16) then if (v80<=13) then if (v80<=11) then local v108=0;local v109;local v110;while true do if (v108==1) then v77[v109 + 1 ]=v110;v77[v109]=v110[v79[4]];break;end if (v108==0) then v109=v79[2];v110=v77[v79[3]];v108=1;end end elseif (v80==12) then v77[v79[2]]=v30(v68[v79[3]],nil,v63);else local v138=v79[2];v77[v138]=v77[v138]();end elseif (v80<=14) then v77[v79[2]]();elseif (v80>15) then local v140=0;local v141;while true do if (v140==0) then v141=v79[2];v77[v141]=v77[v141](v13(v77,v141 + 1 ,v72));break;end end else v77[v79[2]]=v77[v79[3]];end elseif (v80<=19) then if (v80<=17) then local v111=0;local v112;while true do if (v111==0) then v112=v79[2];v77[v112](v13(v77,v112 + 1 ,v79[3]));break;end end elseif (v80==18) then do return;end else v77[v79[2]]=v63[v79[3]];end elseif (v80<=20) then local v113=v79[2];local v114=v77[v113];for v127=v113 + 1 ,v79[3] do v7(v114,v77[v127]);end elseif (v80>21) then local v146=v79[2];v77[v146]=v77[v146](v13(v77,v146 + 1 ,v79[3]));else local v148=0;local v149;while true do if (v148==0) then v149=v79[2];v77[v149](v77[v149 + 1 ]);break;end end end elseif (v80<=34) then if (v80<=28) then if (v80<=25) then if (v80<=23) then v77[v79[2]]=v79[3]~=0 ;elseif (v80>24) then v77[v79[2]]={};else v77[v79[2]]=v79[3]~=0 ;end elseif (v80<=26) then v77[v79[2]]=v30(v68[v79[3]],nil,v63);elseif (v80>27) then v77[v79[2]]={};elseif (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=31) then if (v80<=29) then local v117=0;local v118;local v119;local v120;while true do if (v117==0) then v118=v79[2];v119=v77[v118];v117=1;end if (v117==1) then v120=v79[3];for v205=1,v120 do v119[v205]=v77[v118 + v205 ];end break;end end elseif (v80>30) then local v153=v79[2];local v154,v155=v70(v77[v153](v13(v77,v153 + 1 ,v79[3])));v72=(v155 + v153) -1 ;local v156=0;for v193=v153,v72 do v156=v156 + 1 ;v77[v193]=v154[v156];end else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80<=32) then for v128=v79[2],v79[3] do v77[v128]=nil;end elseif (v80==33) then local v159=v79[2];local v160,v161=v70(v77[v159](v13(v77,v159 + 1 ,v79[3])));v72=(v161 + v159) -1 ;local v162=0;for v196=v159,v72 do v162=v162 + 1 ;v77[v196]=v160[v162];end else v77[v79[2]]=v63[v79[3]];end elseif (v80<=40) then if (v80<=37) then if (v80<=35) then v77[v79[2]][v79[3]]=v79[4];elseif (v80==36) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end else local v165=0;local v166;while true do if (v165==0) then v166=v79[2];v77[v166](v13(v77,v166 + 1 ,v79[3]));break;end end end elseif (v80<=38) then v77[v79[2]]=v77[v79[3]][v79[4]];elseif (v80==39) then v77[v79[2]]();else v77[v79[2]]=v79[3];end elseif (v80<=43) then if (v80<=41) then local v125=v79[2];v77[v125]=v77[v125](v13(v77,v125 + 1 ,v79[3]));elseif (v80==42) then v77[v79[2]][v79[3]]=v77[v79[4]];else v71=v79[3];end elseif (v80<=44) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80==45) then v77[v79[2]][v79[3]]=v79[4];else local v175=v79[2];local v176=v77[v175];local v177=v79[3];for v199=1,v177 do v176[v199]=v77[v175 + v199 ];end end v71=v71 + 1 ;end end;end return v30(v29(),{},v17)(...);end end end vv9(),...);
